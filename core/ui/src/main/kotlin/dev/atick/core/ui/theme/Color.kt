/*
 * Copyright 2023 Atick Faisal
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package dev.atick.core.ui.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF8F4C38)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFFFDBD1)
val onPrimaryContainerLight = Color(0xFF3A0B01)
val secondaryLight = Color(0xFF77574E)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFFFDBD1)
val onSecondaryContainerLight = Color(0xFF2C150F)
val tertiaryLight = Color(0xFF6C5D2F)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFF5E1A7)
val onTertiaryContainerLight = Color(0xFF231B00)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFFF8F6)
val onBackgroundLight = Color(0xFF231917)
val surfaceLight = Color(0xFFFFF8F6)
val onSurfaceLight = Color(0xFF231917)
val surfaceVariantLight = Color(0xFFF5DED8)
val onSurfaceVariantLight = Color(0xFF53433F)
val outlineLight = Color(0xFF85736E)
val outlineVariantLight = Color(0xFFD8C2BC)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF392E2B)
val inverseOnSurfaceLight = Color(0xFFFFEDE8)
val inversePrimaryLight = Color(0xFFFFB5A0)
val surfaceDimLight = Color(0xFFE8D6D2)
val surfaceBrightLight = Color(0xFFFFF8F6)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFFF1ED)
val surfaceContainerLight = Color(0xFFFCEAE5)
val surfaceContainerHighLight = Color(0xFFF7E4E0)
val surfaceContainerHighestLight = Color(0xFFF1DFDA)

// val primaryLightMediumContrast = Color(0xFF6D311F)
// val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
// val primaryContainerLightMediumContrast = Color(0xFFAA614C)
// val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
// val secondaryLightMediumContrast = Color(0xFF593C34)
// val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
// val secondaryContainerLightMediumContrast = Color(0xFF8F6D63)
// val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
// val tertiaryLightMediumContrast = Color(0xFF4E4216)
// val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
// val tertiaryContainerLightMediumContrast = Color(0xFF837442)
// val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
// val errorLightMediumContrast = Color(0xFF8C0009)
// val onErrorLightMediumContrast = Color(0xFFFFFFFF)
// val errorContainerLightMediumContrast = Color(0xFFDA342E)
// val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
// val backgroundLightMediumContrast = Color(0xFFFFF8F6)
// val onBackgroundLightMediumContrast = Color(0xFF231917)
// val surfaceLightMediumContrast = Color(0xFFFFF8F6)
// val onSurfaceLightMediumContrast = Color(0xFF231917)
// val surfaceVariantLightMediumContrast = Color(0xFFF5DED8)
// val onSurfaceVariantLightMediumContrast = Color(0xFF4F3F3B)
// val outlineLightMediumContrast = Color(0xFF6C5B57)
// val outlineVariantLightMediumContrast = Color(0xFF897772)
// val scrimLightMediumContrast = Color(0xFF000000)
// val inverseSurfaceLightMediumContrast = Color(0xFF392E2B)
// val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE8)
// val inversePrimaryLightMediumContrast = Color(0xFFFFB5A0)
// val surfaceDimLightMediumContrast = Color(0xFFE8D6D2)
// val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
// val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
// val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1ED)
// val surfaceContainerLightMediumContrast = Color(0xFFFCEAE5)
// val surfaceContainerHighLightMediumContrast = Color(0xFFF7E4E0)
// val surfaceContainerHighestLightMediumContrast = Color(0xFFF1DFDA)

val primaryLightHighContrast = Color(0xFF431104)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF6D311F)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF341C15)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF593C34)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF2B2100)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF4E4216)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFFF8F6)
val onBackgroundLightHighContrast = Color(0xFF231917)
val surfaceLightHighContrast = Color(0xFFFFF8F6)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFF5DED8)
val onSurfaceVariantLightHighContrast = Color(0xFF2E211D)
val outlineLightHighContrast = Color(0xFF4F3F3B)
val outlineVariantLightHighContrast = Color(0xFF4F3F3B)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF392E2B)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFFFE7E1)
val surfaceDimLightHighContrast = Color(0xFFE8D6D2)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFFF1ED)
val surfaceContainerLightHighContrast = Color(0xFFFCEAE5)
val surfaceContainerHighLightHighContrast = Color(0xFFF7E4E0)
val surfaceContainerHighestLightHighContrast = Color(0xFFF1DFDA)

val primaryDark = Color(0xFFFFB5A0)
val onPrimaryDark = Color(0xFF561F0F)
val primaryContainerDark = Color(0xFF723523)
val onPrimaryContainerDark = Color(0xFFFFDBD1)
val secondaryDark = Color(0xFFE7BDB2)
val onSecondaryDark = Color(0xFF442A22)
val secondaryContainerDark = Color(0xFF5D4037)
val onSecondaryContainerDark = Color(0xFFFFDBD1)
val tertiaryDark = Color(0xFFD8C58D)
val onTertiaryDark = Color(0xFF3B2F05)
val tertiaryContainerDark = Color(0xFF534619)
val onTertiaryContainerDark = Color(0xFFF5E1A7)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF1A110F)
val onBackgroundDark = Color(0xFFF1DFDA)
val surfaceDark = Color(0xFF1A110F)
val onSurfaceDark = Color(0xFFF1DFDA)
val surfaceVariantDark = Color(0xFF53433F)
val onSurfaceVariantDark = Color(0xFFD8C2BC)
val outlineDark = Color(0xFFA08C87)
val outlineVariantDark = Color(0xFF53433F)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF1DFDA)
val inverseOnSurfaceDark = Color(0xFF392E2B)
val inversePrimaryDark = Color(0xFF8F4C38)
val surfaceDimDark = Color(0xFF1A110F)
val surfaceBrightDark = Color(0xFF423734)
val surfaceContainerLowestDark = Color(0xFF140C0A)
val surfaceContainerLowDark = Color(0xFF231917)
val surfaceContainerDark = Color(0xFF271D1B)
val surfaceContainerHighDark = Color(0xFF322825)
val surfaceContainerHighestDark = Color(0xFF3D322F)

// val primaryDarkMediumContrast = Color(0xFFFFBBA7)
// val onPrimaryDarkMediumContrast = Color(0xFF310700)
// val primaryContainerDarkMediumContrast = Color(0xFFCB7C65)
// val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
// val secondaryDarkMediumContrast = Color(0xFFECC1B6)
// val onSecondaryDarkMediumContrast = Color(0xFF26100A)
// val secondaryContainerDarkMediumContrast = Color(0xFFAE887E)
// val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
// val tertiaryDarkMediumContrast = Color(0xFFDDCA91)
// val onTertiaryDarkMediumContrast = Color(0xFF1D1600)
// val tertiaryContainerDarkMediumContrast = Color(0xFFA0905C)
// val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
// val errorDarkMediumContrast = Color(0xFFFFBAB1)
// val onErrorDarkMediumContrast = Color(0xFF370001)
// val errorContainerDarkMediumContrast = Color(0xFFFF5449)
// val onErrorContainerDarkMediumContrast = Color(0xFF000000)
// val backgroundDarkMediumContrast = Color(0xFF1A110F)
// val onBackgroundDarkMediumContrast = Color(0xFFF1DFDA)
// val surfaceDarkMediumContrast = Color(0xFF1A110F)
// val onSurfaceDarkMediumContrast = Color(0xFFFFF9F8)
// val surfaceVariantDarkMediumContrast = Color(0xFF53433F)
// val onSurfaceVariantDarkMediumContrast = Color(0xFFDCC6C0)
// val outlineDarkMediumContrast = Color(0xFFB39E99)
// val outlineVariantDarkMediumContrast = Color(0xFF927F7A)
// val scrimDarkMediumContrast = Color(0xFF000000)
// val inverseSurfaceDarkMediumContrast = Color(0xFFF1DFDA)
// val inverseOnSurfaceDarkMediumContrast = Color(0xFF322825)
// val inversePrimaryDarkMediumContrast = Color(0xFF743624)
// val surfaceDimDarkMediumContrast = Color(0xFF1A110F)
// val surfaceBrightDarkMediumContrast = Color(0xFF423734)
// val surfaceContainerLowestDarkMediumContrast = Color(0xFF140C0A)
// val surfaceContainerLowDarkMediumContrast = Color(0xFF231917)
// val surfaceContainerDarkMediumContrast = Color(0xFF271D1B)
// val surfaceContainerHighDarkMediumContrast = Color(0xFF322825)
// val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D322F)

val primaryDarkHighContrast = Color(0xFFFFF9F8)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFFFBBA7)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFFF9F8)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFECC1B6)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFFAF6)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFDDCA91)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF1A110F)
val onBackgroundDarkHighContrast = Color(0xFFF1DFDA)
val surfaceDarkHighContrast = Color(0xFF1A110F)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF53433F)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFF9F8)
val outlineDarkHighContrast = Color(0xFFDCC6C0)
val outlineVariantDarkHighContrast = Color(0xFFDCC6C0)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFF1DFDA)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF4D1909)
val surfaceDimDarkHighContrast = Color(0xFF1A110F)
val surfaceBrightDarkHighContrast = Color(0xFF423734)
val surfaceContainerLowestDarkHighContrast = Color(0xFF140C0A)
val surfaceContainerLowDarkHighContrast = Color(0xFF231917)
val surfaceContainerDarkHighContrast = Color(0xFF271D1B)
val surfaceContainerHighDarkHighContrast = Color(0xFF322825)
val surfaceContainerHighestDarkHighContrast = Color(0xFF3D322F)

/*
internal val Blue10 = Color(0xFF001F28)
internal val Blue20 = Color(0xFF003544)
internal val Blue30 = Color(0xFF004D61)
internal val Blue40 = Color(0xFF006780)
internal val Blue80 = Color(0xFF5DD5FC)
internal val Blue90 = Color(0xFFB8EAFF)
internal val DarkGreen10 = Color(0xFF0D1F12)
internal val DarkGreen20 = Color(0xFF223526)
internal val DarkGreen30 = Color(0xFF394B3C)
internal val DarkGreen40 = Color(0xFF4F6352)
internal val DarkGreen80 = Color(0xFFB7CCB8)
internal val DarkGreen90 = Color(0xFFD3E8D3)
internal val DarkGreenGray10 = Color(0xFF1A1C1A)
internal val DarkGreenGray20 = Color(0xFF2F312E)
internal val DarkGreenGray90 = Color(0xFFE2E3DE)
internal val DarkGreenGray95 = Color(0xFFF0F1EC)
internal val DarkGreenGray99 = Color(0xFFFBFDF7)
internal val DarkPurpleGray10 = Color(0xFF201A1B)
internal val DarkPurpleGray20 = Color(0xFF362F30)
internal val DarkPurpleGray90 = Color(0xFFECDFE0)
internal val DarkPurpleGray95 = Color(0xFFFAEEEF)
internal val DarkPurpleGray99 = Color(0xFFFCFCFC)
internal val Green10 = Color(0xFF00210B)
internal val Green20 = Color(0xFF003919)
internal val Green30 = Color(0xFF005227)
internal val Green40 = Color(0xFF006D36)
internal val Green80 = Color(0xFF0EE37C)
internal val Green90 = Color(0xFF5AFF9D)
internal val GreenGray30 = Color(0xFF414941)
internal val GreenGray50 = Color(0xFF727971)
internal val GreenGray60 = Color(0xFF8B938A)
internal val GreenGray80 = Color(0xFFC1C9BF)
internal val GreenGray90 = Color(0xFFDDE5DB)
internal val Orange10 = Color(0xFF380D00)
internal val Orange20 = Color(0xFF5B1A00)
internal val Orange30 = Color(0xFF812800)
internal val Orange40 = Color(0xFFA23F16)
internal val Orange80 = Color(0xFFFFB59B)
internal val Orange90 = Color(0xFFFFDBCF)
internal val Purple10 = Color(0xFF36003C)
internal val Purple20 = Color(0xFF560A5D)
internal val Purple30 = Color(0xFF702776)
internal val Purple40 = Color(0xFF8B418F)
internal val Purple80 = Color(0xFFFFA9FE)
internal val Purple90 = Color(0xFFFFD6FA)
internal val PurpleGray30 = Color(0xFF4D444C)
internal val PurpleGray50 = Color(0xFF7F747C)
internal val PurpleGray60 = Color(0xFF998D96)
internal val PurpleGray80 = Color(0xFFD0C3CC)
internal val PurpleGray90 = Color(0xFFEDDEE8)
internal val Red10 = Color(0xFF410002)
internal val Red20 = Color(0xFF690005)
internal val Red30 = Color(0xFF93000A)
internal val Red40 = Color(0xFFBA1A1A)
internal val Red80 = Color(0xFFFFB4AB)
internal val Red90 = Color(0xFFFFDAD6)
internal val Teal10 = Color(0xFF001F26)
internal val Teal20 = Color(0xFF02363F)
internal val Teal30 = Color(0xFF214D56)
internal val Teal40 = Color(0xFF3A656F)
internal val Teal80 = Color(0xFFA2CED9)
internal val Teal90 = Color(0xFFBEEAF6)
*/
